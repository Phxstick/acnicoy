@import "base";

$answer-input-width: 300px;
$answer-input-max-width: 500px;
$answer-input-font-size: 1.3rem;
$answer-input-padding: 5px;

$item-fade-in-timing: cubic-bezier(0.390, 0.575, 0.565, 1.000);  // Ease-out-sine
$item-fade-in-duration: .25;
$item-fade-in-distance: 25px;
$item-fade-in-delay: .08;

$item-fade-out-timing: cubic-bezier(0.390, 0.575, 0.565, 1.000);  // Ease-out-sine
$item-fade-out-duration: .23;
$item-fade-out-distance: 25px;

$solution-fade-distance: 12px;

$scroll-overflow-shadow-size: 25px;
$fade-color: var(--test-frame-fade-color);
$test-frame-background: var(--test-frame-background);

:host {
  --test-frame-background: #{$test-section-background};
  --test-frame-fade-color: #{mix($test-section-background,
                                 $test-section-color, 80%)};
}

:host(.colored-background.word-meaning) {
  --test-frame-background: #{$test-section-item-type-word-meaning};
  --test-frame-fade-color: #{mix($test-section-item-type-word-meaning,
                                 $test-section-color, 80%)};
}
:host(.colored-background.word-reading) {
  --test-frame-background: #{$test-section-item-type-word-reading};
  --test-frame-fade-color: #{mix($test-section-item-type-word-reading,
                                 $test-section-color, 80%)};
}
:host(.colored-background.kanji-meaning) {
  --test-frame-background: #{$test-section-item-type-kanji-meaning};
  --test-frame-fade-color: #{mix($test-section-item-type-kanji-meaning,
                                 $test-section-color, 80%)};
}
:host(.colored-background.kanji-on-yomi) {
  --test-frame-background: #{$test-section-item-type-kanji-on-yomi};
  --test-frame-fade-color: #{mix($test-section-item-type-kanji-on-yomi,
                                 $test-section-color, 80%)};
}
:host(.colored-background.kanji-kun-yomi) {
  --test-frame-background: #{$test-section-item-type-kanji-kun-yomi};
  --test-frame-fade-color: #{mix($test-section-item-type-kanji-kun-yomi,
                                 $test-section-color, 80%)};
}
:host(.colored-background.hanzi-meaning) {
  --test-frame-background: #{$test-section-item-type-hanzi-meaning};
  --test-frame-fade-color: #{mix($test-section-item-type-hanzi-meaning,
                                 $test-section-color, 80%)};
}
:host(.colored-background.hanzi-reading) {
  --test-frame-background: #{$test-section-item-type-hanzi-reading};
  --test-frame-fade-color: #{mix($test-section-item-type-hanzi-reading,
                                 $test-section-color, 80%)};
}

body {
  display: flex;
  flex-direction: column;
  background-color: $test-section-background;
}

#top {
  flex-grow: 1;
  flex-shrink: 0;
  min-height: 320px; // Leave enough space to at least fully display 4 solutions
  position: relative;
  display: flex;
  flex-direction: column;
  background-color: $test-frame-background;
  color: $test-section-color;
  align-items: center;
  padding-left: 12%;
  padding-right: 12%;

  &.animate, &.animate #new-level > option, &.animate #notes-wrapper,
      &.animate #button-bar {
    // Timing function is ease-out-sine
    transition-property: background-color;
    transition-timing-function: $item-fade-in-timing;
    transition-duration: $item-fade-in-duration;
    transition-delay: $item-fade-in-delay;
  }

  // Set backgrounds so that solutions don't overlap when fading in
  &.animate #notes-wrapper, &.animate #button-bar {
    background-color: $test-frame-background;
  }
}

#bottom {
  min-height: 103px;  // Prevents top part from expanding and ruining animations
  flex-grow: 2;
  flex-shrink: 0;
  display: flex;
  flex-direction: column;
  position: relative;
  align-items: center;
  background-color: $test-frame-background;

  &.animate {
    // Timing function is ease-out-sine
    transition-property: background-color;
    transition-timing-function: $item-fade-in-timing;
    transition-duration: $item-fade-in-duration;
    transition-delay: $item-fade-in-delay;
  }
}

#status {
  margin-top: 30px;
  color: $test-section-color;
  font-size: 120%;
  text-shadow: 1px 1px 0 $test-section-status-shadow-color;
  &.correct {
    color: $test-section-correct-color;
  }
  &.incorrect {
    color: $test-section-incorrect-color;
  }
}

#items {
  @include center-content;
  max-width: 600px;
  flex-direction: column;
  flex: 1;
  
  #test-item {
    color: $test-section-color;
    margin-bottom: 25px;
    text-align: center;
    font-family: $vocab-font;

    &.serif { font-family: $serif-font; }

    &.small {
      font-size: 2rem;
      text-shadow: 1px 1px 0 $test-section-test-item-shadow-color;
    }
    &.normal {
      font-size: 3rem;
      text-shadow: 2px 2px 0 $test-section-test-item-shadow-color;
    }
    &.large {
      font-size: 4rem;
      text-shadow: 3px 3px 0 $test-section-test-item-shadow-color;
    }
  }

  #solutions-wrapper, #notes-wrapper {
    position: relative;
    display: flex;
    flex-direction: row;
    overflow-y: hidden;

    %scroll-overflow-bar {
      position: absolute;
      left: -$solution-fade-distance;
      right: -$item-fade-out-distance;
      background-color: $test-frame-background;
      content: "";
      transition-property: background-color;
      transition-timing-function: $item-fade-out-timing;
      transition-duration: $item-fade-out-duration;
    }
    &::before {
      @extend %scroll-overflow-bar;
      bottom: 100%;
      top: -$scroll-overflow-shadow-size;
    }
    &::after {
      @extend %scroll-overflow-bar;
      top: 100%;
      bottom: -$scroll-overflow-shadow-size;
    }
  }

  #solutions, #notes {
    display: flex;
    flex-direction: column;
    align-items: center;

    flex: 1;
    overflow-y: auto;

    color: $test-section-color;
    font-size: 120%;
    font-family: $vocab-font;

    div {
      text-align: center;  // Despite `align-items: center` needed for multiline
      padding-top: 3px;
      padding-bottom: 3px;
      line-height: 1.3;
    }

    &::-webkit-scrollbar {
      width: 16px;
    }
    &::-webkit-scrollbar-track {
      border-radius: 6px;
      background-color: transparent;
    }
    &::-webkit-scrollbar-thumb {
      border-radius: 10px;
      background-clip: padding-box;
      border: 4px solid transparent;
      background-color: $scrollbar-light-thumb-background;
      &:hover {
        background-color: $scrollbar-light-thumb-background-hover;
      }
      &:active {
        background-color: $scrollbar-light-thumb-background-active;
      }
    }

    %scroll-overflow-shadow {
      content: "";
      position: absolute;
      left: -$solution-fade-distance;
      right: $scrollbar-light-width;
      transition-property: background;
      transition-timing-function: $item-fade-out-timing;
      transition-duration: $item-fade-out-duration;
    }
    &::before {
      @extend %scroll-overflow-shadow;
      top: 0;
      height: var(--top-shadow-height, 0px);
      background: linear-gradient(
          to bottom, $test-frame-background, transparent);
    }
    &::after {
      @extend %scroll-overflow-shadow;
      bottom: 0;
      height: var(--bottom-shadow-height, 0px);
      background: linear-gradient(
          to top, $test-frame-background, transparent);
    }

    &.stretch-shadows {
      overflow: visible;
      &::before { 
        right: -$item-fade-in-distance;  // Or should it be fade-out-distance?
      }
      &::after { 
        right: -$item-fade-in-distance;  // Or should it be fade-out-distance?
      }
    }
  }

  #notes {
    @include fading-border($test-section-color-light, "horizontal");
    border-top-width: 1px;
    border-bottom-width: 0;

    padding-top: 5px;
    padding-bottom: 5px;
    margin-top: 5px;
    color: $test-section-color-lightest;

    > div {
      line-height: 1.2rem;
    }
  }

  #notes-wrapper {
    min-height: 46px;
  }

  #solutions {
    &.pinyin > * {
      font-family: $pinyin-font;
    }
  }
}

#level-arrow {
  font-size: 1rem;
  &.correct {
    color: $test-section-correct-color;
  }
  &.incorrect {
    color: $test-section-incorrect-color;
  }
}

#new-level > option {
  font-size: 100%;
  background-color: $test-frame-background;
  color: $test-section-color;
  border: 1px solid transparent;
  font-family: $text-font;

  &:hover {
    border-color: $test-section-color;
  }
  &[selected] {
    border-color: $test-section-color-light;
    &:hover {
      border-color: $test-section-color;
    }
  }
}

#levels-frame {
  position: absolute;
  bottom: 15px;
  right: 15px;
  display: flex;
  flex-direction: row;
  font-size: 140%;
  align-items: center;

  #old-level {
    display: inline-block;
    margin-right: 5px;
  }
  #new-level {
    width: 26px;
    height: 26px;
    margin-left: 5px;
  }
}

#score-frame {
  position: relative;
  margin-left: 30px;

  #score {
    margin-left: 5px;
  }
  #score-animation {
    position: absolute;
    right: -6px;  // Try to center element (works less well for larger scores)
    bottom: 0;
    font-size: 120%;
    font-family: $header-font;
    &.positive { color: $test-section-correct-color; }
    &.negative { color: $test-section-incorrect-color; }
  }
}

#answer-entry {
  text-align: center;
  box-sizing: border-box;
  font-size: $answer-input-font-size;
  line-height: $answer-input-font-size;  // Disregard padding in font glyphs
  padding: $answer-input-padding;
  outline: none;
  cursor: $auto-cursor;
  min-width: $answer-input-width;
  max-width: $answer-input-max-width;
  font-family: $vocab-font;

  &.pinyin {
    font-family: $pinyin-font;
  }
  &:focus::placeholder {
    color: transparent;
  }

  margin-top: 11px;  // Stack with bottom border of continue-button
  color: $test-section-color;
  border-bottom: 1px solid $test-section-color-light;

  &:empty:not(:focus):before {
    cursor: text;
    content: "Enter your answer here";
    color: $test-section-color-medium;
  }
  &:empty:hover:not(:focus):before {
    color: $test-section-color;
  }
  &:focus:before {
    display: none;
  }
  &:hover, &:focus {
    border-color: $test-section-color;
  }
}

#continue-button, #show-solutions-button {
  @include fading-border($test-section-color-medium, "horizontal");
  border-top-width: 1px;
  border-bottom-width: 1px;

  box-sizing: border-box;
  width: 460px;
  padding: $answer-input-padding;
  padding-top: 10px;
  padding-bottom: 10px;
  font-family: $button-font;
  font-size: $answer-input-font-size;
  margin-top: 0px;
  color: $test-section-color-medium;

  &:hover {
    color: $test-section-color;
    border-color: $test-section-color;
    background-image: linear-gradient(
        to right, transparent, $fade-color, transparent);
  }

  &:focus {
    box-shadow: none;
  }
}

#evaluation-buttons {
  @include fading-border($test-section-color-medium, "horizontal");
  border-top-width: 1px;
  border-bottom-width: 1px;

  display: flex;
  flex-direction: row;
  width: 460px;
  color: $test-section-color-medium;

  > button {
    flex: 1;
    padding-top: 10px;
    padding-bottom: 10px;
    font-family: $button-font;
    font-size: $answer-input-font-size;

    &:focus {
      box-shadow: none;
    }
    &:hover, &:focus {
      color: $test-section-color;
    }
    &:not(:last-child) {
      border-right-width: 1px;
      border-right-style: solid;
    }
  }
}

#evaluation-button-wrong {
  &::first-letter {
    border-bottom: 1px solid $test-section-color;
  }
  &:hover, &:focus, &.highlighted {
    $incorrect-fade: rgba(mix(white, $test-section-incorrect-color, 50%), 0.3);
    background-image: linear-gradient(to left,$incorrect-fade,transparent 95%);
    text-shadow: 0 0 1px $test-section-incorrect-color;
  }
}

#evaluation-button-correct {
  &::first-letter {
    border-bottom: 1px solid $test-section-color;
  }
  &:hover, &:focus, &.highlighted {
    $correct-fade: rgba(mix(white, $test-section-correct-color, 50%), 0.3);
    background-image: linear-gradient(to right, $correct-fade, transparent 95%);
    text-shadow: 0 0 1px $test-section-correct-color;
  }
}

#button-bar {
  @include fading-border($test-section-color-medium, "horizontal");
  border-top-width: 1px;
  border-bottom-width: 0px;

  position: relative;
  display: flex;
  flex-direction: row;
  height: 35px;
  width: 460px;
  @include fading-border($test-section-color-medium, "horizontal");

  button {
    @include center-content;
    flex: 1;
    color: $test-section-color-medium;
    font-family: $button-font;

    &:not(:last-child) {
      border-right-width: 1px;
      border-right-style: solid;
    }
    &:focus {
      box-shadow: none;
    }

    // Make text light up upon hovering
    &:hover, &:focus {
      color: $test-section-color;
      text-shadow: 0 0 0.5px $test-section-color-dark;
    }

    // Make background light up upon hovering, use gradient if it's first/last
    &:not(.flashcard-mode) {
      &:not(:first-child):not(:last-child) {
        &:hover, &:focus {
          background-color: $fade-color;
        }
      }
      &:first-child:hover, &:first-child:focus {
        background-image: linear-gradient(to left,$fade-color,transparent 95%);
      }
      &:last-child:hover, &:last-child:focus {
        background-image: linear-gradient(to right,$fade-color,transparent 95%);
      }
    }

    // In flashcard mode, there's just a single button, so fade to both sides
    &.flashcard-mode {
      &:hover, &:focus {
        background-image: linear-gradient(
            to right, transparent 5%, $fade-color, transparent 95%);
      }
    }
  }
}

#progress {
  width: 100%;
  height: 5px;
  appearance: none;

  &::-webkit-progress-bar {
    background-color: transparent;
  }
  &::-webkit-progress-value {
      background-color: $test-section-color-light;
  }
  &::-webkit-progress-inner-element {
    border: 0;
  }
}

#session-info-bar {
  align-self: stretch;
  flex-shrink: 0;
  display: flex;
  flex-direction: row;
  align-items: center;
  color: $test-section-color-light;
  font-size: 1.1rem;
  margin-bottom: 10px;

  > * {
    font-family: $header-font;
    margin-left: 15px;
    flex-shrink: 0;
  }
  > button {
    margin-right: 15px;
    &:hover {
      color: $test-section-color;
    }
  }
  #vocab-list {
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
  }
}

#srs-levels-bar {
  @include fading-border($test-section-color-dark, "horizontal");
  border-bottom-width: 1px;
  border-top-width: 0;

  display: flex;
  flex-direction: row;
  justify-content: center;
  color: darken($test-section-color, 20%);
  font-size: 1.2rem;
  --tooltip-speed: 0s;

  > button {
    display: flex;  // Needed to center css-tooltip
    width: 40px;
    padding-top: 2px;
    padding-bottom: 2px;
    font-family: $light-font;

    &:hover {
      background-color: $fade-color;
    }

    // Transparent placeholder for border
    border-left: 1px solid transparent;
    &:last-child {
      border-right: 1px solid transparent;
    }

    &.next-if-correct {
      background-color: rgba($test-section-correct-color, 0.20);
      color: darken($test-section-color, 5%);

      border-left: 1px solid rgba($test-section-correct-color, 0.5);
      + button {
        border-left: 1px solid rgba($test-section-correct-color, 0.5);
      }
      &:last-child {
        border-right: 1px solid rgba($test-section-correct-color, 0.5);
      }

      &:hover {
        background-color:
          rgba(mix(white, $test-section-correct-color, 50%), 0.25);
      }
    }

    &.next-if-wrong {
      background-color: rgba($test-section-incorrect-color, 0.20);
      color: darken($test-section-color, 5%);

      border-left: 1px solid rgba($test-section-incorrect-color, 0.5);
      + button {
        border-left: 1px solid rgba($test-section-incorrect-color, 0.5);
      }
      &:last-child {
        border-right: 1px solid rgba($test-section-incorrect-color, 0.5);
      }

      &:hover {
        background-color:
          rgba(mix(white, $test-section-incorrect-color, 50%), 0.25);
      }
    }

    &.selected {
      background-color: rgba(white, 0.45);
      color: white;
      text-shadow: 0 0 1px $test-frame-background;

      border-left: 1px solid rgba(white, 0.8) !important;
      + button {
        border-left: 1px solid rgba(white, 0.8);
      }
      &:last-child {
        border-right: 1px solid rgba(white, 0.8);
      }

      &:hover {
        background-color: rgba(white, 0.55);
      }
    }
  }
}
