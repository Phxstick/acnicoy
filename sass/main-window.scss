@import "base";

#window {
  height: 100%;
  position: relative;
  
  #bottom {
    height: calc(100% - #{$menu-bar-height});
    display: flex;
    flex-direction: row;
    // Had to comment following out to prevent strange bugs with side-bar or
    // section-container growing too large. Not sure why I even set this here.
    // overflow: hidden;

    #section-frame {
      flex: 1;
    }

    // For stretching the window upon hiding the side-bar and menu-bar
    transition: height 0.4s ease-in-out;  // Keep equal to values in JS!
    &.stretch {
      height: 100%;
    }
  }
}

#menu-bar {
  height: $menu-bar-height;
  flex-shrink: 0;
  display: flex;
  z-index: var(--menu-bar-layer);
  flex-direction: row;
  box-sizing: border-box;
  background-color: $main-window-background;
  color: $main-window-color;
  position: relative;

  #language-popup {
    --label-color: #{$main-window-color};
    --label-color-hover: #{$main-window-color-hover};
    --label-background-hover: #{$main-window-background-hover};

    --menu-background: #{$button-background};
    --menu-color: #{$button-color};
    --menu-background-hover: #{$button-background-hover};
    --menu-color-hover: #{$button-color-hover};
    --menu-background-selected: #{$button-background-selected};
    --menu-color-selected: #{$button-color-selected};
    --menu-separator-color: #{$button-border-color};
    --highlight-text-shadow: 0 0 0.5px #{$button-color};
    --outline-color-hover: #{$main-window-color};
    z-index: 1;

    &:focus {
      outline: none;
    }
  }

  #menu {
    display: flex;
    flex-direction: row;
    font-family: $light-font;

    > button {
      @include center-content("horizontal");
      box-sizing: border-box;
      width: 45px;
      font-size: 140%;
      transition: background-color 0.15s, color 0.15s, border-color 0.15s,
                  border-left-color 0.15s;
      border-left: 1px solid $main-window-border-color;
      --tooltip-delay: 0.5s;

      &:last-child {
        border-right: 1px solid $main-window-border-color;
        width: 47px;
      }
     
      &:hover {
        background: $main-window-background-hover;
        color: $main-window-color-hover;
        border-color: $main-window-border-color-hover;
        + button {
          border-left-color: $main-window-border-color-hover;
        }
      }
    }
  }

  #status-bar {
    @include center-content;
    flex: 1;

    #status-text {
      text-shadow: 0px 0px 1px $main-window-color;
      text-align: center;
    }
  }

  #notifications-button {
    width: 45px;
    font-size: 140%;
    border-left: 1px solid $main-window-border-color;
    --tooltip-delay: 0.5s;
    transition: background-color 0.1s, color 0.1s, border-color 0.1s;

    &:hover, &.selected {
      background-color: $main-window-background-hover;
      color: $main-window-color-hover;
      border-color: $main-window-border-color-hover;
    }
    &.highlighted {
      box-shadow: 0 0 15px 2px $notifications-button-highlight-background;
      background-color: $notifications-button-highlight-background;
      border-color: $notifications-button-highlight-background;
      text-shadow: 0 0 10px $notifications-button-highlight-color,
                   0 0 6px $notifications-button-highlight-color;
      color: $notifications-button-highlight-color;
      &:hover {
        $light-bg: lighten($notifications-button-highlight-background, 6%);
        box-shadow: 0 0 15px 2px $light-bg;
        background-color: $light-bg;
        border-color: $light-bg;
        text-shadow: 0 0 6px lighten($notifications-button-highlight-color, 8%);
      }
    }
  }

  #notifications {
    position: absolute;
    right: 0;
    top: 100%;
    height: 280px;
    width: 420px;
    display: block;
    overflow: auto;
    box-sizing: border-box;

    &:empty {
      padding: 40px;
      &::after {
        content: "There are currently no notifications.";
        text-align: center;
        font-size: 1.5rem;
        font-family: $light-font;
        color: $color-light;

        // Need to do it here instead of one level above, otherwise the
        // "display:flex" will be overridden with "block" when un-/redisplaying
        height: 100%;
        @include center-content;
      }
    }

    > .notification {
      border-bottom: 1px solid $border-color-medium;
      padding-top: 8px;
      padding-bottom: 8px;
      padding-left: 4px;
      padding-right: 4px;
      margin-left: 8px;
      margin-right: 8px;

      &.highlighted {
        .title {
          font-weight: bold;
        }
      }
      .upper {
        display: flex;
        flex-direction: row;
      }
      .info-frame {
        flex: 1;
        padding-right: 8px;
        .title {
          font-size: 1.2rem;
        }
        .subtitle {
          margin-top: 4px;
          color: $color-light;
        }
      }
      .action {
        @extend button.light, button.no-shadow;
        border-left: 1px solid $border-color-light;
        padding: 0;
        padding-left: 8px;
        width: 100px;
      }
      .details {
        padding-top: 10px;
        // white-space: pre-wrap;
        p {
          margin-top: 6px;
          margin-bottom: 6px;
        }
      }
    }
  }
}

#side-bar {
  // +1px to hide bottom border of last element if it reaches end of the sidebar
  height: calc(100% + 1px);
  width: $side-bar-width;
  display: flex;
  flex-direction: column;
  z-index: var(--side-bar-layer);
  position: relative;
  background-color: $main-window-background;
  color: $main-window-color;
  overflow: hidden;

  button {
    overflow: hidden;
    display: flex;
    flex-direction: column;
    line-height: 140%;
    transition: background-color 0.1s linear, color 0.1s linear,
                border-color 0.1s linear, border-top-color 0.1s linear;
    border-top: 1px solid $main-window-border-color;
    font-size: 150%;
    font-family: $button-font;
    padding-top: 8px;
    padding-bottom: 8px;
    border-bottom: 1px solid $main-window-border-color;
    background-color: $main-window-background;  // Hide bottom border of next

    &:not(:first-child) {
      margin-top: -1px; // Overlap bottom border of prev sibling with top border
    }
    &:last-child {
      border-bottom: 1px solid $main-window-border-color;
    }
    &:hover {
      background-color: $main-window-background-hover;
      color: $main-window-color-hover;
      border-color: $main-window-border-color-hover;
      z-index: $num-side-bar-buttons + 1;  // Make top border go above bottom
                                           // border of previous sibling

      // Following prevents flickering of bottom border when hovering downwards
      ~ button {
        border-top-color: $main-window-border-color-hover;
        z-index: $num-side-bar-buttons + 2;
      }
      // NOTE: previous-sibling selector would allow same for upwards direction
    }
    // Make top border of next button go below bottom border of previous button
    @for $i from 1 through $num-side-bar-buttons {
      &:nth-child(#{$i}):not(:hover) {
        z-index: #{$num-side-bar-buttons - $i};
      }
    }
  }

  #test-button {
    padding-top: 16px;
    padding-bottom: 16px;
    font-size: 220%;
    line-height: 100%;
  
    #num-srs-items {
      margin-top: 10px;
    }
    #num-srs-items, #num-srs-items+span {
      line-height: 120%;
      font-size: 60%;
      // text-shadow: 0 0 1px $main-window-color;
    }
    &.no-items {
      color: mix($main-window-color, $main-window-background, 55%);
      &:hover {
        background-color: $main-window-background;
        color: mix($main-window-color, $main-window-background, 55%);
        border-color: $main-window-border-color;
      }
    }
  }
}


@media (max-height: 520px) {
  #side-bar.content-loaded {
    button {
      font-size: 130%;
      padding-bottom: 0px;  // Leads to equal padding to due line-height of text
      padding-top: 6px;  // Leads to equal padding to due line-height of text
    }
    #test-button {
      font-size: 180%;
      padding-top: 7px;
      padding-bottom: 7px;

      #num-srs-items {
        margin-top: 4px;
      }
    }
  }
}

#section-frame {
  background-color: $background-color;
  position: relative;
  contain: strict;

  // Used to make fading between sections look more natural
  &.alternative-background {
    background-color: $section-background;
  }
  &.default-test-background {
    background-color: var(--test-section-background, $section-background);
  }
}

#filter {
  display: none;
  position: absolute;
  background-color: $panel-dim-background;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: var(--section-overlay-layer);
  &.dark {
    background-color: $panel-dim-background-dark;
  }
}

.section {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: var(--section-layer);
  contain: strict;
}

.sliding-pane {
  width: $panel-width;
  position: absolute;
  left: -$panel-width;
  top: 0;
  bottom: 0;
  background-color: $background-color;
  z-index: var(--panel-layer);
}

.suggestion-pane {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: $panel-width;
  z-index: var(--suggestion-pane-layer);
}

#kanji-info-panel {
  display: none;
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: var(--kanji-info-panel-layer);
}

#selective-dimmer {
  z-index: var(--selective-dimmer-layer);
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
}

#intro-tour-textbox {
  position: fixed;
  z-index: var(--intro-tour-textbox-layer);
  background-color: $background-color;
  border-radius: 8px;
  padding: 10px;
  box-shadow: 0 0 3px rgba($dark-contrast-shadow-color, 0.8);

  #intro-tour-textbox-content {
    font-size: 0.9rem;

    p:first-of-type {
      margin-top: 0;
    }
    p:last-of-type {
      margin-bottom: 0;
    }
    em {
      color: $highlighted-text-color;
      font-style: normal;
    }
    ul {
      padding-left: 25px;
    }
    li {
      margin-bottom: 6px;
    }
  }

  #intro-tour-textbox-buttons {
    display: flex;
    flex-direction: row;
    margin-top: 10px;
    > button {
      font-size: 1rem;
    }
  }
  #intro-tour-next-button, #intro-tour-back-button {
    margin-left: 15px;
  }
}

#panel-shortcuts-info {
  #panel-shortcuts-info-wrapper {
    color: $suggestions-window-color;
    display: flex;
    flex-direction: column;
    height: 100%;
  }

  .header {
    font-size: 165%;
    line-height: 1.9rem;
    font-family: $light-font;
    @include fading-border($suggestions-window-color, "to right");
    border-width: 0;
    border-bottom-width: 1px;
    width: 100%;
    padding-left: 10px;
    padding-top: 5px;
    padding-bottom: 5px;
    height: $panel-header-height + 1px;
    box-sizing: border-box;
  }

  .content {
    flex: 1;
    padding: 20px;
    padding-right: 10px;
    display: flex;
    font-size: 120%;
    flex-direction: column;
    justify-content: space-between;
    font-family: $light-font;
  }

  .shortcut {
    font-weight: bold;
  }

  #hide-panel-shortcuts-info {
    @include fading-border($suggestions-window-color, "horizontal");
    padding: 5px;
    border-top: 1px solid $suggestions-window-color;
    font-family: $button-font;
    opacity: 0.7;

    &:hover {
      opacity: 1;
      text-shadow: 0 0 1px $suggestions-window-color;
      box-shadow: 0 0 1px $suggestions-window-color;
    }
  }
}
